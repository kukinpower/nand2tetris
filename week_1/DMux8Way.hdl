// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    Not(in=sel[0], out=notsel0);
    Not(in=sel[1], out=notsel1);
    Not(in=sel[2], out=notsel2);

	And(a=notsel1, b=notsel0, out=aout);
    And(a=notsel2, b=aout, out=aoutfinal);

	And(a=notsel1, b=sel[0], out=bout);
    And(a=notsel2, b=bout, out=boutfinal);

	And(a=sel[1], b=notsel0, out=cout);
    And(a=notsel2, b=cout, out=coutfinal);

	And(a=sel[1], b=sel[0], out=dout);
    And(a=notsel2, b=dout, out=doutfinal);

    And(a=notsel1, b=notsel0, out=eout);
    And(a=sel[2], b=eout, out=eoutfinal);

    And(a=notsel1, b=sel[0], out=fout);
    And(a=sel[2], b=fout, out=foutfinal);

	And(a=sel[1], b=notsel0, out=gout);
    And(a=sel[2], b=gout, out=goutfinal);

	And(a=sel[1], b=sel[0], out=hout);
    And(a=sel[2], b=hout, out=houtfinal);

	And(a=in, b=aoutfinal, out=a);
	And(a=in, b=boutfinal, out=b);
	And(a=in, b=coutfinal, out=c);
	And(a=in, b=doutfinal, out=d);
    And(a=in, b=eoutfinal, out=e);
	And(a=in, b=foutfinal, out=f);
	And(a=in, b=goutfinal, out=g);
	And(a=in, b=houtfinal, out=h);
}